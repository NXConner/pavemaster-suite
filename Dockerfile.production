# Stage 1: Base
FROM node:20-alpine AS base
LABEL maintainer="Pavement Performance Suite Team"
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    curl \
    git \
    bash

# Stage 2: Dependencies
FROM base AS dependencies
COPY package.json package-lock.json ./
RUN npm ci --only=production

# Stage 3: Build
FROM base AS builder
COPY package.json package-lock.json ./
RUN npm ci

# Copy source files
COPY . .

# Build application
RUN npm run build

# Stage 4: Production
FROM node:20-alpine AS production
WORKDIR /app

# Set environment to production
ENV NODE_ENV=production
ENV PATH /app/node_modules/.bin:$PATH

# Create non-root user for security
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Copy production dependencies
COPY --from=dependencies /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json ./package.json

# Copy additional configuration files
COPY nginx.conf /etc/nginx/nginx.conf
COPY .env.production .env

# Set permissions
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Start command
CMD ["npm", "run", "start:production"]