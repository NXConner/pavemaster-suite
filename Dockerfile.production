# PaveMaster Suite - Production Dockerfile
# Multi-stage build for optimized production deployment

# Stage 1: Build Environment
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./
COPY vite.config.ts ./

# Install dependencies (including dev dependencies for build)
RUN npm ci --only=production=false

# Copy source code
COPY src ./src
COPY public ./public
COPY index.html ./

# Set build-time environment variables
ARG VITE_APP_ENV=production
ARG VITE_APP_VERSION
ARG VITE_BUILD_DATE
ARG VITE_GIT_COMMIT
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_ANON_KEY

ENV VITE_APP_ENV=$VITE_APP_ENV
ENV VITE_APP_VERSION=$VITE_APP_VERSION
ENV VITE_BUILD_DATE=$VITE_BUILD_DATE
ENV VITE_GIT_COMMIT=$VITE_GIT_COMMIT
ENV VITE_SUPABASE_URL=$VITE_SUPABASE_URL
ENV VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY

# Build the application
RUN npm run build

# Stage 2: Production Runtime
FROM nginx:1.25-alpine AS runtime

# Install security updates
RUN apk update && apk upgrade && \
    apk add --no-cache \
    curl \
    tzdata \
    tini && \
    rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# Copy health check script
COPY scripts/health-check.sh /usr/local/bin/health-check.sh
RUN chmod +x /usr/local/bin/health-check.sh

# Set proper permissions
RUN chown -R nodejs:nodejs /usr/share/nginx/html && \
    chown -R nodejs:nodejs /var/cache/nginx && \
    chown -R nodejs:nodejs /var/log/nginx && \
    chown -R nodejs:nodejs /etc/nginx/conf.d

# Create necessary directories with proper permissions
RUN touch /var/run/nginx.pid && \
    chown nodejs:nodejs /var/run/nginx.pid

# Security: Remove unnecessary packages and files
RUN rm -rf /tmp/* /var/tmp/* && \
    rm -rf /usr/share/man/* && \
    rm -rf /usr/share/doc/*

# Add application metadata
LABEL \
    org.opencontainers.image.title="PaveMaster Suite" \
    org.opencontainers.image.description="Enterprise Paving Management System" \
    org.opencontainers.image.version=$VITE_APP_VERSION \
    org.opencontainers.image.created=$VITE_BUILD_DATE \
    org.opencontainers.image.revision=$VITE_GIT_COMMIT \
    org.opencontainers.image.vendor="PaveMaster Technologies" \
    org.opencontainers.image.licenses="Proprietary"

# Set environment variables
ENV NODE_ENV=production
ENV NGINX_PORT=80
ENV NGINX_HOST=0.0.0.0

# Expose port
EXPOSE 80

# Switch to non-root user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD /usr/local/bin/health-check.sh

# Use tini as entrypoint for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start nginx
CMD ["nginx", "-g", "daemon off;"]