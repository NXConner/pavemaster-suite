version: '3.8'

services:
  # PaveMaster Suite Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pavemaster-network

  # Development service (for local development)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0
    restart: unless-stopped
    networks:
      - pavemaster-network
    profiles:
      - dev

  # PostgreSQL Database (for local development)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: pavemaster
      POSTGRES_PASSWORD: pavemaster_dev
      POSTGRES_DB: pavemaster_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pavemaster"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pavemaster-network
    profiles:
      - dev

  # Redis Cache (for local development)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pavemaster-network
    profiles:
      - dev

  # Nginx Load Balancer (for production scaling)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - pavemaster-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  pavemaster-network:
    driver: bridge